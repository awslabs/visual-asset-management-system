From bce198d2aad16d33cf63ac55117a797f659dbb58 Mon Sep 17 00:00:00 2001
From: Scott Patten <scopatvr@amazon.com>
Date: Thu, 21 Sep 2023 07:26:09 -0700
Subject: [PATCH] Removed global CSS rules.

---
 src/Potree.js                          | 31 +++++++++-----
 src/PotreeRenderer.js                  | 11 +++--
 src/modules/loader/2.0/OctreeLoader.js | 57 +++++++++++++++++++-------
 src/viewer/potree.css                  | 46 +++++++++++++--------
 src/viewer/sidebar.html                | 17 ++++++--
 src/viewer/viewer.js                   | 18 ++++++--
 6 files changed, 127 insertions(+), 53 deletions(-)

diff --git a/src/Potree.js b/src/Potree.js
index 92e6fb57..923af93f 100644
--- a/src/Potree.js
+++ b/src/Potree.js
@@ -1,3 +1,8 @@
+/*
+* Original Copyright (c) 2011-2020, Markus Sch端tz. All rights reserved. Licensed under the BSD-2 License.
+* Modifications Copyright 2023 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+* SPDX-License-Identifier: Apache-2.0
+*/
 
 export * from "./Actions.js";
 export * from "./AnimationPath.js";
@@ -95,8 +100,9 @@ export const version = {
 };
 
 export let lru = new LRU();
-
-console.log('Potree ' + version.major + '.' + version.minor + version.suffix);
+// 2023-05-19 Amazon modification
+// console.log('Potree ' + version.major + '.' + version.minor + version.suffix);
+// End of Amazon modification
 
 export let pointBudget = 1 * 1000 * 1000;
 export let framenumber = 0;
@@ -127,14 +133,14 @@ let resourcePath = scriptPath + '/resources';
 // resourcePath:build/potree/resources
 export {scriptPath, resourcePath};
 
-
-export function loadPointCloud(path, name, callback){
+// 2023-05-19 Amazon modification
+export function loadPointCloud(path, name, requestHeaders, callback){
 	let loaded = function(e){
 		e.pointcloud.name = name;
 		callback(e);
 	};
 
-	let promise = new Promise( resolve => {
+	let promise = new Promise( (resolve, reject) => {
 
 		// load pointcloud
 		if (!path){
@@ -162,12 +168,15 @@ export function loadPointCloud(path, name, callback){
 				}
 			});
 		} else if (path.indexOf('metadata.json') > 0) {
-			Potree.OctreeLoader.load(path).then(e => {
-				let geometry = e.geometry;
+			Potree.OctreeLoader.load(path, requestHeaders).then(e => {
 
-				if(!geometry){
+				if (!e || !e.geometry)
+				{
 					console.error(new Error(`failed to load point cloud from URL: ${path}`));
-				}else{
+					reject(new Error("Failed to load point cloud."));
+				} else
+				{
+					let geometry = e.geometry;
 					let pointcloud = new PointCloudOctree(geometry);
 
 					let aPosition = pointcloud.getAttribute("position");
@@ -183,7 +192,7 @@ export function loadPointCloud(path, name, callback){
 				}
 			});
 
-			OctreeLoader.load(path, function (geometry) {
+			OctreeLoader.load(path, requestHeaders, function (geometry) {
 				if (!geometry) {
 					//callback({type: 'loading_failed'});
 					console.error(new Error(`failed to load point cloud from URL: ${path}`));
@@ -218,7 +227,7 @@ export function loadPointCloud(path, name, callback){
 		return promise;
 	}
 };
-
+// End of Amazon modification
 
 // add selectgroup
 (function($){
diff --git a/src/PotreeRenderer.js b/src/PotreeRenderer.js
index 79964f42..3823e64c 100644
--- a/src/PotreeRenderer.js
+++ b/src/PotreeRenderer.js
@@ -1,3 +1,8 @@
+/*
+* Original Copyright (c) 2011-2020, Markus Sch端tz. All rights reserved. Licensed under the BSD-2 License.
+* Modifications Copyright 2023 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+* SPDX-License-Identifier: Apache-2.0
+*/
 
 import * as THREE from "../libs/three.js/build/three.module.js";
 import {PointCloudTree} from "./PointCloudTree.js";
@@ -327,9 +332,9 @@ class Shader {
 
 		const tEnd = performance.now();
 		const duration = tEnd - tStart;
-
-		console.log(`shader compile duration: ${duration.toFixed(3)}`);
-
+		// 2023-05-19 Amazon modifications
+		// console.log(`shader compile duration: ${duration.toFixed(3)}`);
+		// End of Amazon modifications
 
 	}
 
diff --git a/src/modules/loader/2.0/OctreeLoader.js b/src/modules/loader/2.0/OctreeLoader.js
index 0f025661..c42be196 100644
--- a/src/modules/loader/2.0/OctreeLoader.js
+++ b/src/modules/loader/2.0/OctreeLoader.js
@@ -1,3 +1,8 @@
+/*
+* Original Copyright (c) 2011-2020, Markus Sch端tz. All rights reserved. Licensed under the BSD-2 License.
+* Modifications Copyright 2023 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+* SPDX-License-Identifier: Apache-2.0
+*/
 
 import * as THREE from "../../../../libs/three.js/build/three.module.js";
 import {PointAttribute, PointAttributes, PointAttributeTypes} from "../../../loader/PointAttributes.js";
@@ -6,9 +11,10 @@ import {OctreeGeometry, OctreeGeometryNode} from "./OctreeGeometry.js";
 // let loadedNodes = new Set();
 
 export class NodeLoader{
-
-	constructor(url){
+// 2023-05-19 Amazon modifications
+	constructor(url, appendHeaders){
 		this.url = url;
+		this.appendHeaders = appendHeaders
 	}
 
 	async load(node){
@@ -44,13 +50,19 @@ export class NodeLoader{
 
 			if(byteSize === 0n){
 				buffer = new ArrayBuffer(0);
-				console.warn(`loaded node with 0 bytes: ${node.name}`);
+				// console.warn(`loaded node with 0 bytes: ${node.name}`);
 			}else{
-				let response = await fetch(urlOctree, {
-					headers: {
+				let headers = {
 						'content-type': 'multipart/byteranges',
-						'Range': `bytes=${first}-${last}`,
-					},
+						'Range': `bytes=${first}-${last}`
+				};
+
+				for (const property in this.appendHeaders){
+					headers[property] = this.appendHeaders[property];
+				}
+
+				let response = await fetch(urlOctree, {
+					headers: headers
 				});
 
 				buffer = await response.arrayBuffer();
@@ -250,14 +262,20 @@ export class NodeLoader{
 		let first = hierarchyByteOffset;
 		let last = first + hierarchyByteSize - 1n;
 
-		let response = await fetch(hierarchyPath, {
-			headers: {
+		let headers = {
 				'content-type': 'multipart/byteranges',
-				'Range': `bytes=${first}-${last}`,
-			},
-		});
+				'Range': `bytes=${first}-${last}`
+		};
+
+		for (const property in this.appendHeaders){
+			headers[property] = this.appendHeaders[property];
+		}
 
+		let response = await fetch(hierarchyPath, {
+			headers: headers
+		});
 
+// End of Amazon modifications
 
 		let buffer = await response.arrayBuffer();
 
@@ -383,15 +401,24 @@ export class OctreeLoader{
 
 		return attributes;
 	}
+// 2023-05-19 Amazon modifications
+	static async load(url, headers){
+		let response = await fetch(url, {
+			method: 'GET',
+			headers: headers
+		});
 
-	static async load(url){
+		if(!response || !response.ok){
+			console.log(`Error: could not retrieve asset from ${url}`);
+			return;
+		}
 
-		let response = await fetch(url);
 		let metadata = await response.json();
 
 		let attributes = OctreeLoader.parseAttributes(metadata.attributes);
 
-		let loader = new NodeLoader(url);
+		let loader = new NodeLoader(url, headers);
+		// End of Amazon modifications
 		loader.metadata = metadata;
 		loader.attributes = attributes;
 		loader.scale = metadata.scale;
diff --git a/src/viewer/potree.css b/src/viewer/potree.css
index 8e5b5022..f3749466 100644
--- a/src/viewer/potree.css
+++ b/src/viewer/potree.css
@@ -187,10 +187,18 @@
 	background-color: var(--bg-dark-color);
 }
 
-a:hover, a:visited, a:link, a:active{
-	color: 				#ccccff;
-	text-decoration: 	none;
-}
+/*
+	2023-09-21 Amazon modifications
+	
+	Removed global rule:
+
+	a:hover, a:visited, a:link, a:active{
+		color: 				#ccccff;
+		text-decoration: 	none;
+	}
+
+	End of Amazon modifications
+*/
 
 .annotation{
 	position:		absolute;
@@ -309,20 +317,26 @@ a:hover, a:visited, a:link, a:active{
 	opacity:	0.5;
 }
 
+/*  2023-09-21 Amazon modifications
 
-canvas { 
-	width: 100%; 
-	height: 100% 
-}
+	Remove global rules:
 
-body{ 
-	margin: 	0; 
-	padding: 	0;
-	position:	absolute;
-	width: 		100%;
-	height: 	100%;
-	overflow:	hidden;
-}
+	canvas { 
+		width: 100%; 
+		height: 100% 
+	}
+
+	body{ 
+		margin: 	0; 
+		padding: 	0;
+		position:	absolute;
+		width: 		100%;
+		height: 	100%;
+		overflow:	hidden;
+	}
+	
+	End of Amazon modifications
+*/
 
 .axis {
   font: 		10px sans-serif;
diff --git a/src/viewer/sidebar.html b/src/viewer/sidebar.html
index 15524270..e71ebc9c 100644
--- a/src/viewer/sidebar.html
+++ b/src/viewer/sidebar.html
@@ -1,6 +1,12 @@
+<!--
+# Original Copyright (c) 2011-2020, Markus Sch端tz. All rights reserved. Licensed under the BSD-2 License.
+# Modifications Copyright 2023 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+# SPDX-License-Identifier: Apache-2.0
+-->
 
 <div id="sidebar_root" class="">
-	<div id="sidebar_header">
+	<!-- 2023-06-08 Amazon modification -->
+	<!-- <div id="sidebar_header">
 		<span id="potree_branding" class="potree_sidebar_brand">
 			<a href="http://potree.org" target="_blank">potree.org</a> 
 			<span style="margin: 0px 3px; color: #9AA1A4"> - </span> 
@@ -11,7 +17,8 @@
 			<span id="potree_version_number" style="color: #9AA1A4; font-size: 80%; font-weight: 100"></span>
 		</span>
 		<div id="potree_languages" style="font-family:arial;"></div>
-	</div>
+	</div> -->
+	<!-- End of Amazon modification -->
 	<div> 
 
 	<div id="potree_menu" class="accordion">
@@ -166,7 +173,8 @@
 		</div>
 		
 		<!-- ABOUT -->
-		<h3 id="menu_about"><span data-i18n="tb.about_opt"></span></h3>
+		<!-- 2023-06-08 Amazon modification -->
+		<!-- <h3 id="menu_about"><span data-i18n="tb.about_opt"></span></h3>
 		<div>
 			<ul class="pv-menu-list">
 				<li><a href="http://potree.org" target="_blank">Potree</a> is a viewer for large point cloud / LIDAR data sets, developed at the Vienna University of Technology. 
@@ -252,7 +260,8 @@ Thanks to all the companies and institutions funding Potree:
 
 			
 			</ul>
-		</div>
+		</div> -->
+		<!-- End of Amazon modification -->
 
 	</div>
 
diff --git a/src/viewer/viewer.js b/src/viewer/viewer.js
index baf1fb1b..ad908b14 100644
--- a/src/viewer/viewer.js
+++ b/src/viewer/viewer.js
@@ -1,3 +1,8 @@
+/*
+* Original Copyright (c) 2011-2020, Markus Sch端tz. All rights reserved. Licensed under the BSD-2 License.
+* Modifications Copyright 2023 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+* SPDX-License-Identifier: Apache-2.0
+*/
 
 import * as THREE from "../../libs/three.js/build/three.module.js";
 import {ClipTask, ClipMethod, CameraMode, LengthUnits, ElevationGradientRepeat} from "../defines.js";
@@ -1232,8 +1237,9 @@ export class Viewer extends EventDispatcher{
 			VRButton.createButton(this.renderer).then(vrButton => {
 
 				if(vrButton == null){
-					console.log("VR not supported or active.");
-
+					// 2023-05-19 Amazon modifications
+					//console.log("VR not supported or active.");
+					// End of Amazon modifications
 					return;
 				}
 
@@ -1400,8 +1406,9 @@ export class Viewer extends EventDispatcher{
 	}
 
 	initThree () {
-
-		console.log(`initializing three.js ${THREE.REVISION}`);
+		// 2023-05-19 Amazon modifications
+		// console.log(`initializing three.js ${THREE.REVISION}`);
+		// End of Amazon modifications
 
 		let width = this.renderArea.clientWidth;
 		let height = this.renderArea.clientHeight;
@@ -1441,6 +1448,9 @@ export class Viewer extends EventDispatcher{
 		this.renderArea.appendChild(this.renderer.domElement);
 		this.renderer.domElement.tabIndex = '2222';
 		this.renderer.domElement.style.position = 'absolute';
+		// 2023-05-19 Amazon modifications
+		this.renderer.domElement.style.left = '0%';
+		// End of Amazon modifications
 		this.renderer.domElement.addEventListener('mousedown', () => {
 			this.renderer.domElement.focus();
 		});
-- 
2.38.1.windows.1

